name: Safeliner Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:

permissions:
  contents: write
  packages: read
  pull-requests: write

env:
  REPO_OWNER: ${{ github.repository_owner }}
  REPO_NAME: vuln-repo-example
  GENERATED_BRANCH_NAME: 'safeliner-fixes-${{ github.run_id }}'
  GENERATED_PR_TITLE: 'Safeliner SAST auto-fixes ${{github.event.repository.updated_at}}'
  PR_TARGET_BRANCH: master

jobs:
  scan:
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep

    steps:
      # Checks-out your repository
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}
          ref: ${{ env.PR_TARGET_BRANCH }}

      # Scan repo with Semgrep
      - name: scan
        run: |
          semgrep \
            --sarif --output report.sarif

      # Save report as pipeline artifact
      - name: save report as pipeline artifact
        uses: actions/upload-artifact@v4
        with:
          name: report.sarif
          path: report.sarif

  autofix:
    needs: scan
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/safeliner-tech/safeliner-ci:${{ vars.SAFELINER_IMAGE_VERSION || '0.0.1' }}

    steps:
      - name: Generate Safeliner App token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.SAFELINER_APP_ID }}
          private-key: ${{ secrets.SAFELINER_APP_SECRET }}
          owner: ${{ env.REPO_OWNER }}
          repositories: |
            ${{ env.REPO_NAME }}
      
      # Checks-out your repository
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}
          token: ${{ steps.generate-token.outputs.token }}
          ref: ${{ env.PR_TARGET_BRANCH }}

      # Get Sarif report from scanner job
      - name: Download report
        uses: actions/download-artifact@v4
        with: 
          name: report.sarif

      - name: Ð¡heck Git
        env:
          WORKSPACE: ${{ github.workspace }}
        run: |
          git config --global --add safe.directory ${WORKSPACE}
          git status

      - name: Run Safeliner
        env:
          DFG_BUILDER_PATH: ${{ vars.DFG_BUILDER_PATH || '/usr/bin/safeliner-dfg-cli'}}
          ANALYZE_HANDLER: ${{ vars.ANALYZE_HANDLER || 'http://safeliner.tech/analyze'}}
          FEEDBACK_HANDLER: ${{ vars.FEEDBACK_HANDLER || 'http://safeliner.tech/feedback'}}
          BEARER_TOKEN: ${{ secrets.SAFELINER_API_TOKEN }}
        run: |
          cp /usr/bin/integration.py ./integration.py
          python /usr/bin/integration.py apply-report report.sarif
          rm -f ./integration.py
          rm -f report.sarif

      - name: Push Changes
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
          GIT_USERNAME: '${{ steps.generate-token.outputs.app-slug }}[bot]'
          GIT_EMAIL: '${{ steps.generate-token.outputs.user-id }}+${{ steps.generate-token.outputs.app-slug }}[bot]@users.noreply.github.com'
        run: |
          git config user.name "$GIT_USERNAME"
          git config user.email "$GIT_EMAIL"
          git checkout -b "$GENERATED_BRANCH_NAME"
          git add -A
          git commit -m "Safeliner auto fixes for SAST issues"
          git push --set-upstream origin "$GENERATED_BRANCH_NAME"
          
  open-pr:
    needs: autofix
    runs-on: ubuntu-latest

    steps:
      - name: Generate Safeliner App token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.SAFELINER_APP_ID }}
          private-key: ${{ secrets.SAFELINER_APP_SECRET }}
          owner: ${{ env.REPO_OWNER }}
          repositories: |
            ${{ env.REPO_NAME }}
      
      # Checks-out branch with fixes
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}
          token: ${{ steps.generate-token.outputs.token }}
          ref: ${{ env.GENERATED_BRANCH_NAME }}
      
      - name: Open PR
        env: 
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          gh pr create --title "$GENERATED_PR_TITLE" --body "Please check what Safeliner suggest to change in order to make your code secure" --base $PR_TARGET_BRANCH --head $GENERATED_BRANCH_NAME
