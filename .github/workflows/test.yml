name: Safeliner Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  scan:
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep

    steps:
      # Checks-out your repository
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          repository: ostrovskyde/fleet

      # Scan repo with Semgrep
      - name: scan
        run: |
          semgrep \
            --sarif --output report.sarif

      # Save report as pipeline artifact
      - name: save report as pipeline artifact
        uses: actions/upload-artifact@v4
        with:
          name: report.sarif
          path: report.sarif

  connectivity:
    runs-on: ubuntu-latest
    steps:
      - name: Check connectivity
        run: |
          curl -s https://safeliner.tech/analyze

  autofix:
    needs: scan
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ostrovskyde/safeliner-ci:0.0.3

    steps:
      # Checks-out your repository
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          repository: ostrovskyde/fleet

      # Get Sarif report from scanner job
      - name: Download report
        uses: actions/download-artifact@v4
        with: 
          name: report.sarif

      - name: Run Safeliner
        env:
          DFG_BUILDER_PATH: ${{ vars.DFG_BUILDER_PATH }}
          ANALYZE_HANDLER: ${{ vars.ANALYZE_HANDLER }}
          FEEDBACK_HANDLER: ${{ vars.FEEDBACK_HANDLER }}
          BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
        run: |
          cp /usr/bin/integration.py ./integration.py
          python /usr/bin/integration.py apply-report report.sarif
          rm -f ./integration.py
